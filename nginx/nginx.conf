
user  dyc;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
                      '"$upstream_addr" "$upstream_response_time" "$upstream_status" ';

    access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
    
    upstream cluster_b {
        server 129.0.0.1:8714;
    }

    upstream fpm {
        server 127.0.0.1:9000 fail_timeout=5 weight=3;
        server 127.0.0.1:9001 fail_timeout=5 weight=2;
        server 127.0.0.1:9002 fail_timeout=5 weight=2;
    }

    server {
        listen       8715;
        location / {
            root /home/dyc/github/web/fake/;
            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            include fastcgi_params;
            include fastcgi.conf;
            fastcgi_pass fpm;
        }
    }

    server {
        listen       8714;
        server_name  localhost;

        #access_log  logs/host.access.log  main;
        root /home/dyc/github/web/;

        location /b.html {
            root /home/dyc/github/web/test/;
        }

        location /a.html {
            rewrite (.*) /b.html break;
            proxy_pass http://cluster_b;
            proxy_connect_timeout 2s;
            proxy_read_timeout 2s;
            proxy_send_timeout 2s;
        }

        location ~ \.php {
            root /home/dyc/github/web/php/;
            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            include fastcgi_params;
            include fastcgi.conf;
            fastcgi_pass fpm;
        }

        location = /lua {
            content_by_lua 'ngx.say("hello lua")';
        }

        location / {
            root /home/dyc/github/web/;
            index   index.html;
        }

        error_page  404              /404.html;
        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }

}
